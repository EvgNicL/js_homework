// Урок 1. Коллекции и итераторы. Модули

// Формат сдачи: ссылка на репозиторий.

// Задание 1

// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.

// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:

// {
// title: "Название альбома",
// artist: "Исполнитель",
// year: "Год выпуска"
// }

// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)

const musicCollection = [
    {
        title: "Название альбома 1",
        artist: "Исполнитель 1",
        year: "Год выпуска 1"
        },
    {
        title: "Название альбома 2",
        artist: "Исполнитель 2",
        year: "Год выпуска 2"
        },
    {
        title: "Название альбома 3",
        artist: "Исполнитель 3",
        year: "Год выпуска 3"
        }    
];
musicCollection[Symbol.iterator] = () => {
    return {
        current: 0,
        last: this.length,
        next() {
            return this.current < this.last 
            ? {done: false, value: this.current++} 
            : {done:true};
        }
    }
};
for (const number in musicCollection) {
    console.log(number);
    console.log(`${musicCollection[number].title} - ${musicCollection[number].artist} (${musicCollection[number].year})`);
}

// Задание 2

// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

const specializations = {
    Виктор: 'Пицца',
    Ольга: 'Суши',
    Дмитрий: 'Десерты'
}

const dishesAndChefs = new Map([
    ['Пицца "Маргарита"', 'Виктор'],
    ['Пицца "Пепперони"', 'Виктор'],
    ['Суши "Филадельфия"', 'Ольга'],
    ['Суши "Калифорния"', 'Ольга'],
    ['Тирамису', 'Дмитрий'],
    ['Чизкейк', 'Дмитрий']
]);

const clientsOrders = new Map().set({1: 'Алексей'}, ['Пицца "Пепперони"', 'Тирамису'])
    .set({2: 'Мария'}, ['Суши "Калифорния"', 'Пицца "Маргарита"'])
    .set({3: 'Ирина'}, ['Чизкейк']);

/**Получить список "Повара и их специализации" */
function getSpecialization () {
    console.log('===========================');
    console.log('Повара и их специализации:');
    for (const key in specializations) {
        console.log(`${key} - специализация: ${specializations[key]}.`);
    }
}

/**Получить список "Блюда и их повара" */
function getDishesAndChefs () {
    console.log('===========================');
    console.log('Блюда и их повара:');
    dishesAndChefs.forEach((value, key, map) => {
        console.log(`${key} - повар: Виктор.${value}`);
    })
};

function getClientsOrders () {
    console.log('===========================');
    console.log('Заказы:');
    const clients = [];
    const dishes = [];
    for (const client of clientsOrders.keys()) {
        clients.push(String(Object.values(client)));
    };
    for (const order of clientsOrders.values()) {
        dishes.push(order.join(' и '));
    };
    for (let i = 0; i < clients.length; i++) {
        console.log(`Клиент ${clients[i]} заказал: ${dishes[i]}.`);
        
    };
};

getDishesAndChefs ();
getSpecialization ();
getClientsOrders ();